:root {
  /* Chess board theme colors */
  --board-light-square: #f0d9b5;
  --board-dark-square: #b58863;
  --move-indicator-color: 100, 111, 64; /* RGB values for rgba() */
  --ban-indicator-color: 255, 0, 0; /* RGB values for rgba() */
  --move-indicator-opacity: 0.7;
  --ban-indicator-opacity: 0.4; /* Lower opacity for ban indicators to match visual weight */
  --ban-overlay-opacity: 0.2;
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: 'Noto Sans', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  background: #161512;
  color: #bababa;
  scroll-behavior: smooth;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

/* Typography */
.app-title {
  font-size: 3.5rem;
  line-height: 1;
  font-weight: 800;
  letter-spacing: -0.025em;
  margin: 0;
  color: white;
  text-align: center;
}

.app-title-small {
  font-size: 1.5rem;
  line-height: 1;
  font-weight: 800;
  letter-spacing: -0.025em;
  margin: 0;
  color: white;
}

.pink-span {
  color: hsl(280, 100%, 70%);
}

piece.disabled {
  pointer-events: none;
  filter: grayscale(100%) opacity(0.5);
}

/* Ban phase styles - minimal for performance */
.ban-mode-active piece:not(.disabled) {
  cursor: pointer !important;
}

.ban-mode-active piece:not(.disabled):hover {
  filter: brightness(1.2) drop-shadow(0 0 4px rgba(255, 152, 0, 0.6));
}


/* Chess container */
.chess-container {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 2rem;
  background: rgba(30, 30, 30, 0.7);
  border-radius: 1.5rem;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease-in-out;
  width: min(90vw, 600px);
  aspect-ratio: 1/1;
}

.expanded-container {
  aspect-ratio: auto !important;
  min-height: 600px;
  max-height: 800px;
}

/* Make scrollbar match dark theme */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #1e1e1e;
}

::-webkit-scrollbar-thumb {
  background: #444;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* Modern UI enhancements */
.modern-button {
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.modern-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(168, 85, 247, 0.1), rgba(236, 72, 153, 0.1));
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.modern-button:hover::before {
  opacity: 1;
}

.modern-button:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 20px rgba(168, 85, 247, 0.15);
}

/* Enhanced focus states for accessibility */
.modern-button:focus-visible {
  outline: 2px solid rgba(168, 85, 247, 0.5);
  outline-offset: 2px;
}

/* Glassmorphism utilities */
.glass-effect {
  backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.08);
}

.glass-effect-strong {
  backdrop-filter: blur(24px);
  background: rgba(255, 255, 255, 0.08);
  border: 1px solid rgba(255, 255, 255, 0.12);
}

/* Custom animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* local-game board rotation animation */
@keyframes boardFlip {
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(180deg);
  }
}

.local-game-board {
  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  transform-style: preserve-3d;
  perspective: 1000px;
}

.local-game-board.rotating {
  animation: boardFlip 0.6s ease-in-out;
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out;
}

.animate-scale-in {
  animation: scaleIn 0.4s ease-out;
}

/* Enhanced shadow system */
.shadow-glow {
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.15),
    0 0 40px rgba(168, 85, 247, 0.1);
}

.shadow-glow-hover:hover {
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.2),
    0 0 60px rgba(168, 85, 247, 0.15);
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .app-title {
    font-size: 2.5rem;
  }
  
  .chess-container {
    padding: 1rem;
    width: min(95vw, 400px);
  }
}

/* Improved mobile interactions */
@media (hover: none) and (pointer: coarse) {
  .modern-button:hover {
    transform: none;
    box-shadow: none;
  }
  
  .modern-button:active {
    transform: scale(0.98);
  }
}

/* Hide Next.js error overlay in development */
/* We'll show our own error toast instead */
/* But keep React Scan visible */
nextjs-portal:not([data-react-scan-root]) {
  /* Only hide if it's not React Scan */
  display: none !important;
}

/* Alternative: Only hide the specific error overlay */
#__next-build-watcher,
nextjs-portal > div[style*="position: fixed"][style*="z-index: 9999"] {
  display: none !important;
}

/* Prevent body overflow issues when error overlay is hidden */
body {
  padding-right: 0 !important;
}
