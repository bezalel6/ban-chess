version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: next-chess:latest
    container_name: next-chess
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      HOSTNAME: "0.0.0.0"
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      SKIP_ENV_VALIDATION: ${SKIP_ENV_VALIDATION:-true}
      NEXT_TELEMETRY_DISABLED: 1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - coolify
    labels:
      - coolify.managed=true
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`${DOMAIN:-chess.rndev.site}`)
      - traefik.http.services.app.loadbalancer.server.port=3000

networks:
  coolify:
    external: true