# Cleaned Supabase config.toml
project_id = "next-chess"

[api]
enabled = true
port = 54321
max_rows = 1000

[realtime]
enabled = true
ip_version = "IPv4"

[db]
port = 54322
major_version = 15

[auth]
site_url = "env(SITE_URL)"
additional_redirect_urls = [
  "https://chess.rndev.site",
  "http://127.0.0.1:3000",
  "https://127.0.0.1:3000",
  "https://localhost:3000",
  "http://localhost:3000"
]
enable_signup = true
enable_anonymous_sign_ins = true
enable_refresh_token_rotation = true
refresh_token_reuse_interval = 10

[auth.email]
enable_signup = true
double_confirm_changes = true
enable_confirmations = true

[auth.email.smtp]
host = "smtp.resend.com"
port = 465
user = "resend"
pass = "env(SMTP_PASSWORD)"
admin_email = "noreply@chess.rndev.site"
sender_name = "Ban Chess"

[auth.email.template.confirmation]
subject = "BanChess · Confirm your signup"
content_path = "./supabase/templates/confirmation.html"

[auth.email.template.invite]
subject = "BanChess · You’ve been invited"
content_path = "./supabase/templates/invite.html"

[auth.email.template.magic_link]
subject = "BanChess · Magic Login Link"
content_path = "./supabase/templates/magic_link.html"

[auth.email.template.recovery]
subject = "Reset Your Password"
content_path = "./supabase/templates/recovery.html"

[auth.email.template.email_change]
subject = "Confirm Email Change"
content_path = "./supabase/templates/email_change.html"

[auth.email.template.reauthentication]
subject = "Confirm Reauthentication"
content_path = "./supabase/templates/reauthentication.html"

[auth.rate_limit]
email_sent = 100
sms_sent = 30
token_refresh = 150
anonymous_users = 30

[auth.mfa.totp]
enroll_enabled = true
verify_enabled = true

[auth.external.google]
enabled = true
client_id = "907502703164-g5of7ia6g6i48cafibflb0aj2ac87v3l.apps.googleusercontent.com"
secret = "env(GOOGLE_CLIENT_SECRET)"
skip_nonce_check = false

# Auth Hooks
# Example HTTP hook configuration - uncomment and modify as needed
[auth.hook.custom_access_token]
enabled = false
# uri = "http://host.docker.internal:54321/functions/v1/custom_access_token"
# secrets = "env(CUSTOM_ACCESS_TOKEN_HOOK_SECRET)"

[auth.hook.send_email]
enabled = false
# uri = "http://host.docker.internal:54321/functions/v1/send_email"
# secrets = "env(SEND_EMAIL_HOOK_SECRET)"

[auth.hook.send_sms]
enabled = false
# uri = "http://host.docker.internal:54321/functions/v1/send_sms"
# secrets = "env(SEND_SMS_HOOK_SECRET)"

[auth.hook.mfa_verification_attempt]
enabled = false
# uri = "http://host.docker.internal:54321/functions/v1/mfa_verification"
# secrets = "env(MFA_VERIFICATION_HOOK_SECRET)"

[auth.hook.password_verification_attempt]
enabled = false
# uri = "http://host.docker.internal:54321/functions/v1/password_verification"
# secrets = "env(PASSWORD_VERIFICATION_HOOK_SECRET)"

# Before User Created Hook
# This hook runs before a user is inserted into the database
[auth.hook.before_user_created]
enabled = true
# Use localhost:54321 which is the Edge Functions runtime
uri = "http://host.docker.internal:54321/functions/v1/user-management-hook"
secrets = "env(BEFORE_USER_CREATED_HOOK_SECRET)"
